asm SetteEMezzoNReal

import StandardLibrary
import CTLlibrary

signature: 

	enum domain Carte = {ASSO | DUE | TRE | QUATTRO | CINQUE | SEI | SETTE}
	enum domain Giocatori = {UTENTE | PC}
	enum domain Vincitori = {WIN_UTENTE | WIN_PC | NONDEFINITO}
	
	domain DomSoldi subsetof Integer
	domain DomCarte subsetof Integer
	
	dynamic monitored pescaUtente: Boolean
	dynamic controlled pescaPC: Boolean
	dynamic controlled mano: Giocatori -> DomCarte
	dynamic controlled vincitore: Vincitori
	dynamic monitored pescata: Giocatori -> Carte
	dynamic controlled soldi: Giocatori -> DomSoldi
	
	static valoreCarte: Carte -> DomCarte
	derived possibilePartita : Boolean
	
definitions:
	domain DomSoldi = {0 : 10}
	domain DomCarte = {0 : 30}
	
	function possibilePartita =
		if(soldi(UTENTE) = 0 or soldi(PC) = 0) then
			false
		else 
			true
		endif
	
	function valoreCarte($c in Carte) =
		switch($c)
			case ASSO : 1
			case DUE : 2
			case TRE : 3
			case QUATTRO : 4
			case CINQUE : 5
			case SEI : 6
			case SETTE : 7
		endswitch 
		
		
	rule r_azzeraPartita =	
		par
			mano(UTENTE) := 0
			mano(PC) := 0
		endpar
		
	rule r_endOfGame =
			if(mano(UTENTE) >= 8 and mano(PC) >= 8) then
				r_azzeraPartita[]
			else if(mano(UTENTE) = 8 or mano(PC)> 8) then
				par
					vincitore := WIN_UTENTE
					soldi(UTENTE) := soldi(UTENTE) + 1
					soldi(PC) := soldi(PC) - 1 
					r_azzeraPartita[]
				endpar
			else if(mano(PC) = 8 or mano(UTENTE)>8 or (pescaUtente=false and mano(PC)>mano(UTENTE))) then
				par
					vincitore := WIN_PC
					soldi(PC) := soldi(PC) + 1 
					soldi(UTENTE) := soldi(UTENTE) - 1
					r_azzeraPartita[]
				endpar
			endif
			endif
			endif
					
	
	rule r_pescata ($g in Giocatori, $c in Carte) =
		mano($g) := mano($g) + valoreCarte($c)
			
	
	rule r_partita =
		seq
			par
				vincitore := NONDEFINITO
				if(pescaUtente) then
					r_pescata[UTENTE,pescata(UTENTE)]
				endif
				if(mano(PC)<=mano(UTENTE)) then
					par
						pescaPC := true
						r_pescata[PC,pescata(PC)]
					endpar
				else
					pescaPC := false
				endif
			endpar
			r_endOfGame[]
		endseq
	
	
	//Esiste uno stato in cui l'utente vincerà
	CTLSPEC ef(vincitore = WIN_UTENTE)
	
	//Non sempre utente o il PC possono vincere
	CTLSPEC af(vincitore = NONDEFINITO)
	
	//Se l'utente non pesca, il pc pesca oppure qualcuno vince
	CTLSPEC ag(not(pescaUtente) implies ax(vincitore=WIN_PC or vincitore=WIN_UTENTE or pescaPC))
	
	//Il PC pesca finchè ha una mano minore dell'utente
	CTLSPEC a(pescaPC,mano(PC)<mano(UTENTE))


	main rule r_main = 
		if(possibilePartita) then
			r_partita[]
		endif

default init s0:
	function vincitore = NONDEFINITO
	function pescaPC = true
	function mano($g in Giocatori) = 0
	function soldi($g in Giocatori) = 5
